<UserControl x:Class="BudgetApp.BudgetCalendarControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:BudgetApp"
             xmlns:cvt="clr-namespace:IvieConverters;assembly=IvieConverters"
             xmlns:vms="clr-namespace:BudgetApp.ViewModels"
             xmlns:customs="clr-namespace:IvieCustomControls;assembly=IvieCustomControls"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d"
             Width="844">

    <!--<UserControl.Resources>
        <cvt:BooleanToConnectedConverter x:Key="ConnectedConverter"/>
    </UserControl.Resources>-->

    <!--<UserControl.Resources>
        <ObjectDataProvider x:Key="dataFromEnum"
                            MethodName="GetValues"
                            ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="local:CalendarOptions"/>
                <x:Type TypeName="local:DueDateFrequencies"/> 
            </ObjectDataProvider.MethodParameters>
            
            
        </ObjectDataProvider>
    </UserControl.Resources>-->
    
    <Grid VerticalAlignment="Stretch"
        d:DataContext="{x:Static vms:BudgetCalendarDesignModel.Instance}" Background="AliceBlue">
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="120"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="80"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <!--<ContentControl Content="{Binding BVM}" Grid.Row="5" Grid.Column="0" />-->
        <StackPanel Orientation="Horizontal" Background="AliceBlue"
                Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3">
            <Button FontFamily="{StaticResource FontAwesome}" Content="{StaticResource FontAwesomeArrowLeftIcon}"
                Command="{Binding PrevTimeCommand}"/>
            <Button FontFamily="{StaticResource FontAwesome}" Content="{StaticResource FontAwesomeArrowRightIcon}"
                Command="{Binding NextTimeCommand}"/>
            <TextBlock Text="{Binding MonthYear, Converter={cvt:MonthYearConverter}}" FontSize="14" FontFamily="Arial" VerticalAlignment="Center"/>
            <!--<ComboBox ItemsSource="{Binding Source={local:EnumBindingSource {x:Type local:CalendarOptions}}}"  SelectedItem="{Binding SelectedOption}"
                    Margin="5"/>-->
            <!--<ComboBox ItemsSource="{Binding Source={StaticResource dataFromEnum}}" SelectedItem="{Binding SelectedOption}"
                    Margin="5"/>-->
            <StackPanel VerticalAlignment="Center" Margin="10 0 10 0">
                <RadioButton IsChecked="{Binding Path=SelectedOption, Converter={cvt:EnumToBoolConverter}, ConverterParameter=TwoWeek}">Bi-Weekly View</RadioButton>
                <RadioButton IsChecked="{Binding Path=SelectedOption, Converter={cvt:EnumToBoolConverter}, ConverterParameter=FiveWeek}">Month View</RadioButton>
            </StackPanel>

            <ComboBox ItemsSource="{Binding Source={local:EnumBindingSource {x:Type local:PayDateFrequencies}}}" 
                    SelectedItem="{Binding PayDateFrequency}"
                    VerticalAlignment="Center"/>
            <TextBox Text="{Binding CurrPaydate, Converter={cvt:DateOnlyConverter}}"
                    VerticalAlignment="Center" Height="22" BorderBrush="Blue" BorderThickness="1"/>
        </StackPanel>
        <Grid Grid.Row="1" Background="AliceBlue" HorizontalAlignment="Stretch"
            Grid.Column="0" Grid.ColumnSpan="3">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <!--<RowDefinition Height="*"/>-->
                <!--<RowDefinition Height="*"/>-->
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Column="0" Text="Sunday" Style="{StaticResource CalendarDays}" />
            <TextBlock Grid.Column="1" Text="Monday" Style="{StaticResource CalendarDays}"/>
            <TextBlock Grid.Column="2" Text="Tuesday" Style="{StaticResource CalendarDays}" />
            <TextBlock Grid.Column="3" Text="Wednesday" Style="{StaticResource CalendarDays}" />
            <TextBlock Grid.Column="4" Text="Thursday" Style="{StaticResource CalendarDays}" />
            <TextBlock Grid.Column="5" Text="Friday" Style="{StaticResource CalendarDays}" />
            <TextBlock Grid.Column="6" Text="Saturday" Style="{StaticResource CalendarDays}"/>


            <ListBox Grid.Row="2" Grid.ColumnSpan="7" 
                    ItemsSource="{Binding DayList}" Margin="0"
                    ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                    ScrollViewer.VerticalScrollBarVisibility="Disabled"
                    SelectedItem="{Binding SelectedDBVM}"
                    local:SelectorDoubleClickCommandBehavior.HandleDoubleClick="True"
                    local:SelectorDoubleClickCommandBehavior.DoubleClickCommand="{Binding DoubleClickCommand}"
                     
                     
                    >

                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="Padding" Value="0"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="IsSelected" Value="{Binding Selected}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{StaticResource ForegroundVeryDarkBrush}">
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Foreground" Value="{StaticResource BackgroundVeryLightBrush}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>

                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <!--<EventSetter Event="MouseDoubleClick" Handler="ListBoxItem_MouseDoubleClick"/>-->

                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>

            </ListBox>

            <!--<local:WeekOfDayControls Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="7"/>
        <local:WeekOfDayControls Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="7"/>
        <local:WeekOfDayControls Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="7"/>
        <local:WeekOfDayControls Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="7"/>-->

        </Grid>

        <!--<TextBox Text="{Binding BankBalance, Converter={cvt:CurrencyConverter}}" VerticalAlignment="Center"
                MouseDoubleClick="TextBox_MouseDoubleClick"
                local:FocusExtension.IsFocused="{Binding IsTextBoxFocused}"
                Grid.Row="3" Grid.Column="1"/>-->
        <ListBox Grid.Row="3" Grid.ColumnSpan="7" ItemsSource="{Binding Accounts}"  
                Height="120">
            <!--<ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
                </Style>
            </ListBox.ItemContainerStyle>-->
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
        </ListBox>
        <!--<customs:BankAccountListBox Grid.Row="5" Grid.ColumnSpan="7" ItemsSource="{Binding Accounts}"
                                    Background="Black" Height="120">-->
            <!--<customs:BankAccountListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
                </Style>
            </customs:BankAccountListBox.ItemContainerStyle>-->


        <!--</customs:BankAccountListBox>-->

        <TextBlock Text="Total Due" Grid.Row="4" Margin="5" VerticalAlignment="Center"/>
        <TextBlock Text="{Binding TotalDue, Converter={cvt:CurrencyConverter}, Mode=OneWay}" VerticalAlignment="Center"
                Grid.Row="4" Grid.Column="1"/>
        <TextBlock Text="{Binding RemainingBalance, Converter={cvt:CurrencyConverter}, Mode=OneWay}" VerticalAlignment="Center"
                Grid.Row="4" Grid.Column="2"/>
        <!--<StackPanel x:Name="MonthViewStack" Grid.Row="2">
            
    </StackPanel>-->
        <!--<Grid x:Name="MonthViewGrid" Grid.Row="2">
        <Grid.RowDefinitions>
        </Grid.RowDefinitions>
    </Grid>-->



    </Grid>
    
</UserControl>
